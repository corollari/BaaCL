bits 16 ; tell NASM this is 16 bit code
org 0x7c00 ; tell NASM to start outputting stuff at offset 0x7c00
display:
    mov si,text ; point si register to hello label memory location
    mov ah,0x0e ; 0x0e means 'Write Character in TTY mode'
.loop:
    lodsb
    or al,al ; is al == 0 ?
    jz halt  ; if (al == 0) jump to halt label
    int 0x10 ; runs BIOS interrupt 0x10 - Video Services
    jmp .loop
halt:
    cli ; clear interrupt flag
    hlt ; halt execution

text: db 73,39,109,32,65,108,98,101,114,116,32,65,99,101,98,114,111,110,58,10,13,45,32,83,116,117,100,101,110,116,32,109,97,106,111,114,105,110,103,32,105,110,32,77,97,116,104,44,32,67,83,32,97,110,100,32,84,101,108,101,99,111,109,109,117,110,105,99,97,116,105,111,110,115,32,119,105,116,104,32,97,32,99,117,114,114,101,110,116,32,71,80,65,32,111,102,32,57,46,51,47,49,48,32,40,116,111,112,32,71,80,65,32,105,110,32,101,110,103,105,110,101,101,114,105,110,103,32,108,97,115,116,32,121,101,97,114,41,10,13,45,32,67,111,45,102,111,117,110,100,101,114,32,111,102,32,97,32,102,97,105,108,101,100,32,65,73,32,115,116,97,114,116,117,112,10,13,45,32,83,101,114,105,97,108,32,104,97,99,107,97,116,104,111,110,32,103,111,101,114,32,40,87,105,107,105,112,101,100,105,97,44,32,111,120,102,111,114,100,72,97,99,107,115,46,46,46,41,10,13,45,32,79,112,101,110,32,115,111,117,114,99,101,32,99,111,110,116,114,105,98,117,116,111,114,32,119,104,111,32,103,111,101,115,32,98,121,32,64,99,111,114,111,108,108,97,114,105,32,111,110,32,103,105,116,104,117,98,10,13,45,32,67,117,114,114,101,110,116,108,121,32,108,111,111,107,105,110,103,32,102,111,114,32,97,32,115,117,109,109,101,114,32,105,110,116,101,114,110,115,104,105,112,10,13,10,13,67,111,110,116,97,99,116,58,32,109,101,64,97,108,98,101,114,116,46,115,104,32,47,32,43,51,52,32,54,56,52,32,51,53,32,49,51,32,56,55,10,13,0
times 510 - ($-$$) db 0 ; pad remaining 510 bytes with zeroes
dw 0xaa55 ; magic bootloader magic - marks this 512 byte sector bootable!
